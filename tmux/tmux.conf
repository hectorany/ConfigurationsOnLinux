#* Behaviour
set-option -g display-time 3000
set-option -g history-limit 60000
set-option -g repeat-time 1000

#* Key bindings
set-option -g prefix F12        # if not work, check if TERM=xterm
bind-key -n F11 send-prefix     # F11 becomes 'prefix' of nested tmux sessions
bind-key C-b send-prefix        # F11 C-b ... nested nested ... sessions
bind-key | split-window -h      # default is "
bind-key _ split-window -v      # default is %
bind-key Tab select-pane -t:.+  # easier to key-chord than F12+<arrow>
bind-key BTab select-pane -t:.-
set-option -g status-keys vi
set-option -g mode-keys vi
bind-key C-s set-window-option synchronize-panes
bind-key b set-option status

bind-key -r n next-window       # same as default ones but are repeat-able
bind-key -r p previous-window
bind-key -r Space next-layout

# Conflicts with my emacs settings.
# bind-key -nr C-Up select-pane -U
# bind-key -nr C-Down select-pane -D
# bind-key -nr C-Left select-pane -L
# bind-key -nr C-Right select-pane -R

#* Status bar format
set-option -g base-index 1      # window index starts from 1 instead of 0
set-option -g status on
set-window-option -g automatic-rename on
set-window-option -g monitor-activity on
# set-option -g status-utf8 on
set-option -g status-justify centre
set-option -g status-left-length 30
# set-option -g window-status-format "#I:#W"
set-option -g status-left "#P->#T"
set-option -g status-right "#S@#h %l:%M %p"

#* Terminal type
## NOTE: Comment out this if you don't know what it is
set-option -g default-terminal "xterm-256color"
# set-option -g default-terminal "screen-256color"
# or start tmux with "tmux -2" to force 256
## "if-shell" runs asynchronously, so it does not help

#* color themes
#source-file ~/.tmux/tmuxcolors-dark.conf
source-file ~/.tmux/concise

#* Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S@#h'

#* Mouse support
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on


#* My functions

bind-key m command-prompt -p "move (swap) current pane with: " "swap-pane -s %1"
bind-key j command-prompt "join-pane -h -d -s '%1'"
bind-key C command-prompt "new-window '%1'"
bind-key S command-prompt "new-session -s '%1'"

#** Screen log
# `C-h' to save log
bind-key C-h command-prompt -p "save log to:" \
         "copy-mode; send-keys 'M->' C-e C-space 'M-<' C-a C-w; save-buffer %%"
# # if "set-window-option -g mode-keys vi", use this one:
# bind-key C-h command-prompt -p "save log to:" \
#          "copy-mode; send-keys g 'space' G 'enter'; save-buffer %%"

# ## NOT recommended
# bind-key h pipe-pane "cat >>$HOME/#S-#I-#P.log" \; \
#          rename-window "log" \; \
#          display-message "Start logging($HOME/#S-#I-#P.log)"

# bind-key H pipe-pane \; \
#          set-window-option automatic-rename on \; \
#          display-message "Stopped logging(#S-#I-#P.log)"

#** temporary "maximize" a pane
## (Tmux 1.8 or above have built-in support 'Prefix + z')
# from http://superuser.com/questions/238702/maximizing-a-pane-in-tmux
unbind +
bind-key + run "if [[ $(tmux list-window) =~ MAX ]]; then \
         tmux last-window;\
         tmux swap-pane -s MAX.0; \
         tmux kill-window -t MAX; \
         else tmux new-window -d -n MAX; \
         tmux swap-pane -s MAX.0; \
         tmux select-window -t MAX;fi"

#* Usage of Screen in case tmux is not available
# ***********************************************
#
# screen -S foo # new session foo
# screen -x foo # attach to session foo
# screen -ls    # list all sessions
# C-a C-c       # create a new window
# C-a "         # list and switch window
# C-a C-d       # detach
